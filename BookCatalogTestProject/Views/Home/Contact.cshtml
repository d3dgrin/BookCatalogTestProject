@{
    ViewBag.Title = "Contact";
}

@Scripts.Render("~/bundles/book");

<h2>@ViewBag.Title.</h2>
<h3>@ViewBag.Message</h3>


<span>Selected value: </span>
<span data-bind="text: value"></span>

<div style="width: 350px; margin-top: 20px;">
    <select style="width: 100%;" data-bind="value: value, valueAllowUnset: true, options: data, optionsText: 'text', optionsValue: 'id', select2: { placeholder: 'Select an option...', allowClear: true }"></select>
</div>


@section scripts {

    <script>

        ko.bindingHandlers.select2 = {
            after: ["options", "value"],
            init: function (el, valueAccessor, allBindingsAccessor, viewModel) {
                $(el).select2(ko.unwrap(valueAccessor()));
                ko.utils.domNodeDisposal.addDisposeCallback(el, function () {
                    $(el).select2('destroy');
                });
            },
            update: function (el, valueAccessor, allBindingsAccessor, viewModel) {
                var allBindings = allBindingsAccessor();
                var select2 = $(el).data("select2");
                if ("value" in allBindings) {
                    var newValue = "" + ko.unwrap(allBindings.value);
                    if ((allBindings.select2.multiple || el.multiple) && newValue.constructor !== Array) {
                        select2.val([newValue.split(",")]);
                    }
                    else {
                        select2.val([newValue]);
                    }
                }
            }
        };

        $(function () {

            var data = ko.observableArray([{ id: 1, text: "A" }, { id: 2, text: "B" }]);
            var value = ko.observable();
            ko.applyBindings({ data: data, value: value });

        });

    </script>

}